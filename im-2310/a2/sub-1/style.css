/* my page is designed to be a cute, silly comic page for children. 
i chose to design the boxes with a linear gradient from blue to yellow 
to resemble thr sand of an ocean/water floor.

the lower case and incorrect grammar of 'dis my dog' is designed to relate to
small kids who like using that kind of 'baby voice' dialect, which will inadvertently 
have a comedic effect on 'mature' adults.

the illustrations are simple pixel art sketches that are designed to compliment the short sections of text.
*/

html {
  background-color: var(--col02);
}

* {
  font-family: monospace;
  box-sizing: border-box;
}

:root {
  --col01: rgb(255, 209, 4);
  --col02: rgb(119, 179, 243);
  --border: groover 10px var(--col01)
}

p {
  padding-top: 10px;
  padding-left: 5px;
  padding-right: 5px;
  /* background-color: var(--col01); */
}

/* img tags to adjust size of certain images */

#img1 {
  max-width: 100px;
}

#img2 {
  max-width: 100px;
  margin-bottom: 50px;
}

#img3 {
  max-height: 200px;
}

#img4 {
  max-height: 100px;
  padding-bottom: 50px;
}

#img5 {
  max-width: 400px;
  padding-right: 120px;
}

#img6 {
  max-width: 250px;
}

#img61 {
max-width: 100px;  
padding-right: 10px;
}

#img7 {
  max-width: 200px;
  padding-right: 80px;
}

#img8 {
  height: 100px;
}

#img9 {
  height: 100px;
}

/* headers tag to play with the adjustment of the heading (i didn't do much) */

#headers {
  font-size: 18px;
  /* background-color: var(--col02); */
  text-align: center;
}

/* container class that helps to make the grid like the referenced material */

.container {
  height: 100vh;
  min-width: 850px;
  /* background-color: var(--col02); */
  display: grid; 
  grid-auto-columns: 1fr; 

  /* i had fun getting my head around this! a good learning curve... i measured out the sections of the referenced comic imgage
  and calcutlated their respective ratios to my new html design */
  grid-template-columns: 0.5fr 2fr 2fr 0.4fr 0.2fr 1fr 3fr 0.5fr 0.4fr 0.1fr 3fr; 
  grid-template-rows: 2.2fr 0.6fr 0.888fr 1.6fr 0.3fr 1.52fr 0.2fr 0.6fr 2.12fr 0.44fr; 

  gap: 0px 0px; 
  padding: 15px;
  margin-top: 60px;
  margin-bottom: 60px;
  margin-right: 30px;
  margin-left: 30px;
  text-align: center;
  }

.element0class {
  background-color: var(--col01);
  border: 4px dotted rgb(255, 209, 4);
  background: linear-gradient(0deg, rgb(255, 209, 4), 20%, var(--col02));
}

/* element tags were utilised in conjunction with the above-commented grid-template-columns/ratios css code.
by counting the row and column lines drawn on the reference sketch, i was able to transfer that information into these element id's. the restult was 
a grid formation that imitated the reference material...*/

#element1 {
  background-color: var(--col01);
  grid-column: 2/5;
  grid-row: 1/4;
}
#element2 {
  grid-column: 7/10;
  grid-row: 1/3;
}
#element3 {
  grid-column: 11/12;
  grid-row: 1/5;
}
#element4 {
  grid-column: 1/4;
  grid-row: 3/5;
}
#element5 {
  grid-column: 6/9;
  grid-row: 2/5;
}
#element6 {
  grid-column: 1/12;
  grid-row: 6/7;
}
#element7 {
  grid-column: 3/8;
  grid-row: 8/10;
  text-align: right;
  padding-right: 50px;
}
#element8 {
  grid-column: 1/6;
  grid-row: 9/11;
}
#element9 {
  grid-column: 9/12;
  grid-row: 8/11;
}

/* -------- */

/* class notes to help me on my journey... */

/* flex has a default direction of left to right
flex direction: row; - to make rows
flex direction: column; - to make to make columns columns columns columns columns columns columns
justify-content: space-between;
height: 100vh;
align-items: end:
gap: 10px;
align-self: stretch
css-tricks.com
css-tricks.com
grid-row: 2/4;
z-index: 3;

*/
